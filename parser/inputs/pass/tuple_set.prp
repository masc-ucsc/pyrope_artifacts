
x as set:true         #done
x = (1, 2, 3, 3)      #done
I x == (1 2 3)

x = x ++ 4  # add to tuple  #done
I x == (1 2 3 4)
x = x ++ 2                  #done
I x == (1 2 3 4)


x = x -- 3 # Remove a tuple element     #done

x = (1,3) ** 3 # replicate the tuple 3 times
x = x ** (1+3)                    #done

error parenthesis needed for expressions in tuple operations:
  x = x ** 1*2

if x in 3:
  x = (x -- 3) ++ 4 # Remove 3 if present, and add 4

error ambiguous tuple operators, parenthesis can break ambiguity:
  x = x -- 3 ++ 4

x = x -- (3 ++ 4)           #done

x = x ++ 3 ++ 4 # Not ambigious, just add (x ++ 3) ++ 4 == x ++ (3 ++ 4)

error ambiguous tuple operators, parenthesis can break ambiguity:
  x = x -- 3 -- 4

# Multiple lines break ambiguity (same as parenthesis)
a = (1 3)
    ++ 4
    -- (2 ++ 6 ++ 3)
    -- (4 ++ 6)
    -- 3 ++ 4                                 #done

error tuple operators always need spaces:
  x = x--3                                        #done

error tuple operators always need spaces:
  x = x --3                                     #done

error tuple operators always need spaces:
  x = x-- 3                                     #done

b = (1 3 4)                   #done
a = b ++ (3 5)                #done
I a == (1 3 4 3 5)
c = a -- 3                    #done
I a == (1 4 5)

I (1 2) ** 2 == (1 2 1 2)   #done
error:
 I (1 2) ** (2 3) 
I 1 ** (2) == (1 1)

I 1 in (1 2)            #done
I (1 2) in (3 1 4 2)    #done

I (1 2 3 4 5) by 2 == (1 3 5)     #done


# Tuple operators have more precedence than comparisons but less precedence than single element operators.

I (1 2) ++ (2 + 3) ++ 4 == (1 2) ++ 5 ++ 4 == (1 2 5 4)                                           #done
error:
  I (1 2) ++ 2 + 3 ++ 4 == (1 2) ++ 5 ++ 4 == (1 2 5 4)                       #done

